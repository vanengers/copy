<?php

namespace Vanengers\Copy\Tests\Excludes;

use PHPUnit\Framework\TestCase;
use Symfony\Component\Console\Input\ArrayInput;
use Symfony\Component\Console\Output\ConsoleOutput;
use Vanengers\Copy\Command\CopyCommand;

class ExcludesTest extends TestCase
{
    public $root;
    public $destination;
    public $source;

    public function setUp(): void
    {
        $this->source = 'C:\_GIT\copy';
        $this->root = 'C:\_GIT\copy\tests\copy_test';
        $this->destination = $this->root . '\destination';
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function tearDown(): void
    {
        $fs = new \Symfony\Component\Filesystem\Filesystem();
        $fs->remove($this->root);
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function testCanCopyFolderExistsExcludingFoldersNonExisting()
    {
        $excludes = ['vendor','bin', 'tests'];
        $copy = new CopyCommand();
        $copy->run(
            new ArrayInput([
                '--source' => $this->source,
                '--destination' => $this->destination,
                '--excludes' => join(',',$excludes)
            ]),
            new ConsoleOutput()
        );
        $this->assertDirectoryExists($this->destination);
        $this->assertDirectoryDoesNotExist($this->destination.'\.github');

        foreach($excludes as $exc) {
            $this->assertDirectoryDoesNotExist($this->destination.'\\'.$exc);
        }
    }
}
